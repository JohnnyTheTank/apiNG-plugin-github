
/*! aping-plugin-github v0.1.0 (11-12-2015) by Jonathan Hornung */
"use strict";var jjtApingGithub=angular.module("jtt_aping_github",["jtt_github"]).directive("apingGithub",["apingGithubHelper","apingUtilityHelper","githubFactory",function(a,b,c){return{require:"?aping",restrict:"A",replace:"false",link:function(d,e,f,g){var h=g.getAppSettings(),i=b.parseJsonFromAttributes(f.apingGithub,a.getThisPlattformString(),h);i.forEach(function(d){var e={access_token:b.getApiCredentials(a.getThisPlattformString(),"access_token"),per_page:d.items||h.items};if(d.user)switch(e.user=d.user,h.model){case"repo":d.repo?(e.repo=d.repo,c.getRepoByUserAndName(e).success(function(b){g.concatToResults(a.getObjectByJsonData(b,h.model))}).error(function(a){})):c.getReposByUser(e).success(function(b){g.concatToResults(a.getObjectByJsonData(b,h.model))}).error(function(a){});break;case"activity":c.getEventsByUser(e).success(function(b){g.concatToResults(a.getObjectByJsonData(b,h.model))}).error(function(a){})}else if(d.search)switch(e.q=d.search,"undefined"!=typeof d.sort&&(e.sort=d.sort),"undefined"!=typeof d.order&&(e.order=d.order),h.model){case"repo":c.getReposByName(e).success(function(b){g.concatToResults(a.getObjectByJsonData(b,h.model))}).error(function(a){})}})}}}]);jjtApingGithub.service("apingGithubHelper",["apingModels","apingTimeHelper","apingUtilityHelper",function(a,b,c){this.getThisPlattformString=function(){return"github"},this.getThisPlattformLink=function(){return"https://github.com/"},this.getObjectByJsonData=function(a,b){var c=[];if(a){var d=this;if(a.constructor===Array)angular.forEach(a,function(a,e){var f=d.getItemByJsonData(a,b);f&&c.push(f)});else{if(a.items)angular.forEach(a.items,function(a,e){var f=d.getItemByJsonData(a,b);f&&c.push(f)});else{var e=d.getItemByJsonData(a,b);e&&c.push(e)}}}return c},this.getItemByJsonData=function(a,b){var c={};if(a&&b)switch(b){case"repo":c=this.getRepoItemByJsonData(a);break;case"activity":c=this.getActivityItemByJsonData(a);break;default:return!1}return c},this.getRepoItemByJsonData=function(c){var d=a.getNew("repo",this.getThisPlattformString());return $.extend(!0,d,{owner_name:c.owner?c.owner.login:!1,owner_id:c.owner?c.owner.id:!1,owner_link:c.owner?c.owner.html_url:!1,owner_img_url:c.owner?c.owner.avatar_url:!1,name:c.name,id:c.id,fullname:c.full_name,description:c.description||!1,url:c.html_url,homepage:c.homepage||!1,language:c.language||!1,clone_url:c.clone_url,git_url:c.git_url,ssh_url:c.ssh_url,svn_url:c.svn_url,isFork:c.fork,openIssues:c.open_issues_count,watchers:c.watchers_count,stargazers:c.stargazers_count,forks:c.forks_count,created_timestamp:b.getTimestampFromDateString(c.created_at,1e3,36e5),created_date_time:new Date(c.created_at),updated_timestamp:c.updated_at?b.getTimestampFromDateString(c.updated_at,1e3,36e5):!1,updated_date_time:c.updated_at?new Date(c.updated_at):!1,pushed_timestamp:c.pushed_at?b.getTimestampFromDateString(c.pushed_at,1e3,36e5):!1,pushed_date_time:c.pushed_at?new Date(c.pushed_at):!1}),d},this.getActivityItemByJsonData=function(c){var d=a.getNew("activity",this.getThisPlattformString());return $.extend(!0,d,{body:!1,actor_name:c.actor?c.actor.login:!1,actor_id:c.actor?c.actor.id:!1,actor_url:c.actor?this.getThisPlattformLink()+c.actor.login:!1,actor_img_url:c.actor?c.actor.avatar_url:!1,actor_type:!1,action_name:!1,action_id:c.id,action_url:!1,action_img:!1,action_type:c.type,object_name:c.repo?c.repo.name:!1,object_id:c.repo?c.repo.id:!1,object_img:!1,object_url:c.repo?this.getThisPlattformLink()+c.repo.name:!1,object_type:c.repo?"repository":!1,context:!1,timestamp:b.getTimestampFromDateString(c.created_at,1e3,36e5),date_time:new Date(c.created_at)}),d}}]),angular.module("jtt_github",[]).factory("githubFactory",["$http","githubSearchDataService",function(a,b){var c={};return c.getUser=function(c){var d=b.getNew("user",c);return a({method:"GET",url:d.url,params:d.object})},c.getReposByUser=function(c){var d=b.getNew("reposByUser",c);return a({method:"GET",url:d.url,params:d.object})},c.getReposByName=function(c){var d=b.getNew("reposByName",c);return a({method:"GET",url:d.url,params:d.object})},c.getRepoByUserAndName=function(c){var d=b.getNew("repoByUserAndName",c);return a({method:"GET",url:d.url,params:d.object})},c.getEventsByUser=function(c){var d=b.getNew("eventsByUser",c);return a({method:"GET",url:d.url,params:d.object})},c.getEventsFromRepoByUserAndName=function(c){var d=b.getNew("eventsFromRepoByUserAndName",c);return a({method:"GET",url:d.url,params:d.object})},c}]).service("githubSearchDataService",function(){this.getApiBaseUrl=function(a){return"https://api.github.com/"},this.fillDataInObjectByList=function(a,b,c){return angular.forEach(c,function(c,d){"undefined"!=typeof b[c]&&(a.object[c]=b[c])}),a},this.getNew=function(a,b){var c=20,d={object:{},url:""};switch(a){case"user":d.object={access_token:b.access_token},d=this.fillDataInObjectByList(d,b,[]),d.url=this.getApiBaseUrl()+"users/"+b.user;break;case"reposByUser":d.object={access_token:b.access_token,per_page:b.per_page||c},d=this.fillDataInObjectByList(d,b,["q","sort","order","page"]),d.url=this.getApiBaseUrl()+"users/"+b.user+"/repos";break;case"reposByName":d.object={access_token:b.access_token,per_page:b.per_page||c},d=this.fillDataInObjectByList(d,b,["sort","order","page"]),d.url=this.getApiBaseUrl()+"search/repositories?q="+b.q;break;case"repoByUserAndName":d.object={access_token:b.access_token},d=this.fillDataInObjectByList(d,b,[]),d.url=this.getApiBaseUrl()+"repos/"+b.user+"/"+b.repo;break;case"eventsByUser":d.object={access_token:b.access_token,per_page:b.per_page||c},d=this.fillDataInObjectByList(d,b,["q","sort","order","page"]),d.url=this.getApiBaseUrl()+"users/"+b.user+"/events";break;case"eventsFromRepoByUserAndName":d.object={access_token:b.access_token,per_page:b.per_page||c},d=this.fillDataInObjectByList(d,b,["q","sort","order","page"]),d.url=this.getApiBaseUrl()+"repos/"+b.user+"/"+b.repo+"/events"}return d}});